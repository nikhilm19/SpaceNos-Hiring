{"version":3,"sources":["components/VoiceMessage/Recorderjs/src/recorder.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Appointment/index.js","components/App/index.js","components/Description/index.js","components/Name/index.js","components/Header/index.js","components/Snackbar/index.js","components/ProgressBar/index.js","components/VoiceMessage/index.js","components/Date-Time/index.js","components/TextMessage/index.js","components/VoiceUploader/index.js","components/Buttons/SubmitBtn/index.js","serviceWorker.js","index.js","components/VoiceMessage/Recorderjs/src/index.js","logo.svg"],"names":["Recorder","source","cfg","config","bufferLen","numChannels","mimeType","recording","callbacks","getBuffer","exportWAV","Object","assign","this","context","node","createScriptProcessor","createJavaScriptNode","call","onaudioprocess","e","buffer","channel","push","inputBuffer","getChannelData","worker","postMessage","command","connect","destination","InlineWorker","sampleRate","recLength","recBuffers","initBuffers","mergeBuffers","result","Float32Array","offset","i","length","set","writeString","view","string","setUint8","charCodeAt","onmessage","data","record","type","interleaved","buffers","inputL","inputR","index","inputIndex","interleave","dataview","samples","ArrayBuffer","DataView","setUint32","setUint16","output","input","s","Math","max","min","setInt16","floatTo16BitPCM","encodeWAV","audioBlob","Blob","cb","pop","callback","Error","blob","filename","url","window","URL","webkitURL","createObjectURL","link","document","createElement","href","download","click","createEvent","initEvent","dispatchEvent","FirebaseContext","React","createContext","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Component","app","initializeApp","storage","db","firestore","App","props","className","noValidate","autoComplete","children","withStyles","root","border","borderRadius","color","margin","classes","TextField","id","label","multiline","rows","variant","Header","TransitionsSnackbar","useState","open","Transition","Fade","state","Snackbar","onClose","handleClose","TransitionComponent","message","useStyles","makeStyles","theme","backdrop","zIndex","drawer","SimpleBackdrop","Backdrop","onClick","CircularProgress","SlideTransition","Slide","direction","VoiceMessage","setState","openSnackBar","handleProgressClose","openProgress","startOrStopRecording","isRecording","stopRecording","startRecording","storeUrl","addUrl","collection","doc","update","urls","FieldValue","arrayUnion","then","docRef","console","log","catch","error","handleUpload","ref","put","on","snapshot","progress","round","bytesTransferred","totalBytes","getDownloadURL","JSON","stringify","navigator","mediaDevices","getUserMedia","audio","video","stream","audioContext","AudioContext","gumStream","createMediaStreamSource","rec","err","stop","alert","getAudioTracks","createDownloadLink","Date","toISOString","bind","webkitAudioContext","Button","style","width","height","backgroundColor","startIcon","display","flexDirection","li","marginRight","FolderList","marginTop","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","styles","Description","SubmitButton","Boolean","location","hostname","match","spacing","createMuiTheme","palette","blue","secondary","pink","contrastThreshold","tonalOffset","ReactDOM","render","Provider","value","ThemeProvider","Paper","elevation","padding","getElementById","serviceWorker","ready","registration","unregister","module","exports","require"],"mappings":"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","file":"static/js/main.4135458f.chunk.js","sourcesContent":["import InlineWorker from 'inline-worker';\n\nexport class Recorder {\n    config = {\n        bufferLen: 4096,\n        numChannels: 2,\n        mimeType: 'audio/wav'\n    };\n\n    recording = false;\n\n    callbacks = {\n        getBuffer: [],\n        exportWAV: []\n    };\n\n    constructor(source, cfg) {\n        Object.assign(this.config, cfg);\n        this.context = source.context;\n        this.node = (this.context.createScriptProcessor ||\n        this.context.createJavaScriptNode).call(this.context,\n            this.config.bufferLen, this.config.numChannels, this.config.numChannels);\n\n        this.node.onaudioprocess = (e) => {\n            if (!this.recording) return;\n\n            var buffer = [];\n            for (var channel = 0; channel < this.config.numChannels; channel++) {\n                buffer.push(e.inputBuffer.getChannelData(channel));\n            }\n            this.worker.postMessage({\n                command: 'record',\n                buffer: buffer\n            });\n        };\n\n        source.connect(this.node);\n        this.node.connect(this.context.destination);    //this should not be necessary\n\n        let self = {};\n        this.worker = new InlineWorker(function () {\n            let recLength = 0,\n                recBuffers = [],\n                sampleRate,\n                numChannels;\n\n            this.onmessage = function (e) {\n                switch (e.data.command) {\n                    case 'init':\n                        init(e.data.config);\n                        break;\n                    case 'record':\n                        record(e.data.buffer);\n                        break;\n                    case 'exportWAV':\n                        exportWAV(e.data.type);\n                        break;\n                    case 'getBuffer':\n                        getBuffer();\n                        break;\n                    case 'clear':\n                        clear();\n                        break;\n                }\n            };\n\n            function init(config) {\n                sampleRate = config.sampleRate;\n                numChannels = config.numChannels;\n                initBuffers();\n            }\n\n            function record(inputBuffer) {\n                for (var channel = 0; channel < numChannels; channel++) {\n                    recBuffers[channel].push(inputBuffer[channel]);\n                }\n                recLength += inputBuffer[0].length;\n            }\n\n            function exportWAV(type) {\n                let buffers = [];\n                for (let channel = 0; channel < numChannels; channel++) {\n                    buffers.push(mergeBuffers(recBuffers[channel], recLength));\n                }\n                let interleaved;\n                if (numChannels === 2) {\n                    interleaved = interleave(buffers[0], buffers[1]);\n                } else {\n                    interleaved = buffers[0];\n                }\n                let dataview = encodeWAV(interleaved);\n                let audioBlob = new Blob([dataview], {type: type});\n\n                this.postMessage({command: 'exportWAV', data: audioBlob});\n            }\n\n            function getBuffer() {\n                let buffers = [];\n                for (let channel = 0; channel < numChannels; channel++) {\n                    buffers.push(mergeBuffers(recBuffers[channel], recLength));\n                }\n                this.postMessage({command: 'getBuffer', data: buffers});\n            }\n\n            function clear() {\n                recLength = 0;\n                recBuffers = [];\n                initBuffers();\n            }\n\n            function initBuffers() {\n                for (let channel = 0; channel < numChannels; channel++) {\n                    recBuffers[channel] = [];\n                }\n            }\n\n            function mergeBuffers(recBuffers, recLength) {\n                let result = new Float32Array(recLength);\n                let offset = 0;\n                for (let i = 0; i < recBuffers.length; i++) {\n                    result.set(recBuffers[i], offset);\n                    offset += recBuffers[i].length;\n                }\n                return result;\n            }\n\n            function interleave(inputL, inputR) {\n                let length = inputL.length + inputR.length;\n                let result = new Float32Array(length);\n\n                let index = 0,\n                    inputIndex = 0;\n\n                while (index < length) {\n                    result[index++] = inputL[inputIndex];\n                    result[index++] = inputR[inputIndex];\n                    inputIndex++;\n                }\n                return result;\n            }\n\n            function floatTo16BitPCM(output, offset, input) {\n                for (let i = 0; i < input.length; i++, offset += 2) {\n                    let s = Math.max(-1, Math.min(1, input[i]));\n                    output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n                }\n            }\n\n            function writeString(view, offset, string) {\n                for (let i = 0; i < string.length; i++) {\n                    view.setUint8(offset + i, string.charCodeAt(i));\n                }\n            }\n\n            function encodeWAV(samples) {\n                let buffer = new ArrayBuffer(44 + samples.length * 2);\n                let view = new DataView(buffer);\n\n                /* RIFF identifier */\n                writeString(view, 0, 'RIFF');\n                /* RIFF chunk length */\n                view.setUint32(4, 36 + samples.length * 2, true);\n                /* RIFF type */\n                writeString(view, 8, 'WAVE');\n                /* format chunk identifier */\n                writeString(view, 12, 'fmt ');\n                /* format chunk length */\n                view.setUint32(16, 16, true);\n                /* sample format (raw) */\n                view.setUint16(20, 1, true);\n                /* channel count */\n                view.setUint16(22, numChannels, true);\n                /* sample rate */\n                view.setUint32(24, sampleRate, true);\n                /* byte rate (sample rate * block align) */\n                view.setUint32(28, sampleRate * 4, true);\n                /* block align (channel count * bytes per sample) */\n                view.setUint16(32, numChannels * 2, true);\n                /* bits per sample */\n                view.setUint16(34, 16, true);\n                /* data chunk identifier */\n                writeString(view, 36, 'data');\n                /* data chunk length */\n                view.setUint32(40, samples.length * 2, true);\n\n                floatTo16BitPCM(view, 44, samples);\n\n                return view;\n            }\n        }, self);\n\n        this.worker.postMessage({\n            command: 'init',\n            config: {\n                sampleRate: this.context.sampleRate,\n                numChannels: this.config.numChannels\n            }\n        });\n\n        this.worker.onmessage = (e) => {\n            let cb = this.callbacks[e.data.command].pop();\n            if (typeof cb == 'function') {\n                cb(e.data.data);\n            }\n        };\n    }\n\n\n    record() {\n        this.recording = true;\n    }\n\n    stop() {\n        this.recording = false;\n    }\n\n    clear() {\n        this.worker.postMessage({command: 'clear'});\n    }\n\n    getBuffer(cb) {\n        cb = cb || this.config.callback;\n        if (!cb) throw new Error('Callback not set');\n\n        this.callbacks.getBuffer.push(cb);\n\n        this.worker.postMessage({command: 'getBuffer'});\n    }\n\n    exportWAV(cb, mimeType) {\n        mimeType = mimeType || this.config.mimeType;\n        cb = cb || this.config.callback;\n        if (!cb) throw new Error('Callback not set');\n\n        this.callbacks.exportWAV.push(cb);\n\n        this.worker.postMessage({\n            command: 'exportWAV',\n            type: mimeType\n        });\n    }\n\n    static\n    forceDownload(blob, filename) {\n        let url = (window.URL || window.webkitURL).createObjectURL(blob);\n        let link = window.document.createElement('a');\n        link.href = url;\n        link.download = filename || 'output.wav';\n        let click = document.createEvent(\"Event\");\n        click.initEvent(\"click\", true, true);\n        link.dispatchEvent(click);\n    }\n}\n\nexport default Recorder;\n","import React from \"react\";\n\nconst FirebaseContext  = React.createContext(null);\nexport {FirebaseContext}\n","import app from \"firebase/app\";\n\nimport React from \"react\";\nimport \"firebase/storage\";\nimport \"firebase/firestore\";\n\n\nconst devConfig = {\n  apiKey: process.env.REACT_APP_DEV_API_KEY,\n  authDomain: process.env.REACT_APP_DEV_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DEV_DATABASE_URL,\n  projectId: process.env.REACT_APP_DEV_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_DEV_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_DEV_MESSAGING_SENDER_ID,\n};\n\nconst config = {\n    apiKey: \"AIzaSyCkYt8MQPF2uex-XcghDCpsr4MEGL17Eow\",\n    authDomain: \"spacenos-hiring.firebaseapp.com\",\n    databaseURL: \"https://spacenos-hiring.firebaseio.com\",\n    projectId: \"spacenos-hiring\",\n    storageBucket: \"spacenos-hiring.appspot.com\",\n    messagingSenderId: \"1023800752908\",\n    appId: \"1:1023800752908:web:fb83c7e43b40f60c88e729\"\n  };\n//const config = process.env.NODE_ENV === \"production\" ? prodConfig : devConfig;\n\nclass Firebase extends React.Component {\n  db = null;\n  storage = null;\n\n  constructor(props) {\n    super(props);\n    app.initializeApp(config);\n    this.state = {\n      url: \"\",\n      storage: app.storage(),\n    };\n\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  handleUpload = (image) => {\n    console.log(\"hello\" + image);\n    const uploadTask = this.state.storage\n      .ref(`images/${image.name}`)\n      .put(image);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        // progress function ...\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        this.setState({ progress });\n      },\n      (error) => {\n        // Error function ...\n        console.log(error);\n      },\n      () => {\n        // complete function ...\n        this.state.storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then((url) => {\n            this.setState({ url });\n          });\n      }\n    );\n  };\n}\n\napp.initializeApp(config);\n\nconst storage = app.storage();\nconst db = app.firestore();\n\nexport { app, storage, db };\n","import React from \"react\";\nimport { FirebaseContext } from \"../Firebase\";\n\nclass Appointment extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      description: \"\",\n      voiceMessageUrl: \"\",\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>App</h1>\n      </div>\n    );\n  }\n}\n\nexport default Appointment;\n/*const Appointment = () => (\n  <FirebaseContext.Consumer>\n    {firebase => {\n      return <div>I've access to Firebase and render something.</div>;\n    }}\n  </FirebaseContext.Consumer>\n);\nexport default Appointment;*/\n","import React from \"react\";\nimport logo from \"../../logo.svg\";\nimport \"./App.css\";\nimport Appointment from \"../Appointment\";\n\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction App(props) {\n  return (\n    \n      <div className=\"App\">\n        <form noValidate autoComplete=\"off\">\n          {props.children}\n        </form>\n      </div>\n    \n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport \"./index.css\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport blue from \"@material-ui/core/colors/blue\";\nconst styles = {\n  root: {\n    border: 0,\n    borderRadius: 3,\n    /*boxShadow: \"0 2.8px 2.2px rgba(0, 0, 0, 0.034),0 6.7px 5.3px rgba(0, 0, 0, 0.048),0 12.5px 10px rgba(0, 0, 0, 0.06),0 22.3px 17.9px rgba(0, 0, 0, 0.072),0 41.8px 33.4px rgba(0, 0, 0, 0.086),0 100px 80px rgba(0, 0, 0, 0.12)\",*/\n    color: \"white\",\n    margin: \"none\",\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: 25,\n    },\n  },\n};\nfunction Description(props) {\n  const { classes } = props;\n  return (\n    <div className={\"description-container \" + classes.root}>\n      <TextField\n        className=\"description--text\"\n        id=\"description\"\n        label=\"Description\"\n        multiline\n        rows={4}\n        variant=\"outlined\"\n      />\n    </div>\n  );\n}\n\nDescription.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Description);\n","\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport './index.css'\n\n\n\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\n\n\nconst styles = {\n  root: {\n   \n    border: 0,\n    borderRadius: 3,\n    /*boxShadow: \"0 2.8px 2.2px rgba(0, 0, 0, 0.034),0 6.7px 5.3px rgba(0, 0, 0, 0.048),0 12.5px 10px rgba(0, 0, 0, 0.06),0 22.3px 17.9px rgba(0, 0, 0, 0.072),0 41.8px 33.4px rgba(0, 0, 0, 0.086),0 100px 80px rgba(0, 0, 0, 0.12)\",*/\n    color: 'white',\n    margin:'none',\n    '& .MuiOutlinedInput-root':{\n      borderRadius: 25  ,\n  \n    }\n    \n  },\n  \n};\n\nfunction Name(props) {\n  const { classes } = props;\n  return (\n\n    <div className=\"name-container\">\n\n      <div className=\"name-container--firstname\">\n      <TextField  id=\"firstname\" className={\"name--firstname \"+classes.root} id=\"outlined-basic\" label=\"First Name\" variant=\"outlined\" />\n\n      </div>\n      <div className=\"name-container--lastname\">\n      <TextField className=\"name--lastname\"id=\"lastname\" className={\"name--firstname \"+classes.root} id=\"outlined-basic\" label=\"Last Name\" variant=\"outlined\" />\n\n      </div>\n    </div>\n  )\n  \n  \n  \n  \n    \n}\n\nName.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Name);\n\n\n","import React from 'react';\nimport './index.css'\n\nfunction Header(props) {\n  return (\n\n    <div className=\"appointment-header\">\n        <h1>Book an Appointment</h1>\n    </div>\n  );\n}\n\nexport default Header\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Fade from '@material-ui/core/Fade';\nimport Slide from '@material-ui/core/Slide';\nimport Grow from '@material-ui/core/Grow';\n\nfunction SlideTransition(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\nfunction GrowTransition(props) {\n  return <Grow {...props} />;\n}\n\nexport default function TransitionsSnackbar(props) {\n  const [state, setState] = React.useState({\n    open: false,\n    Transition: Fade,\n  });\n\n  const handleClick = (Transition) => () => {\n    setState({\n      open: true,\n      Transition:SlideTransition,\n    });\n  };\n\n  const handleClose = () => {\n    setState({\n      ...state,\n      open: false,\n    });\n  };\n\n  return (\n    <div>\n      \n      <Snackbar\n        open={props.open}\n        onClose={props.handleClose}\n        TransitionComponent={state.Transition}\n        message=\"Voice Message Uploaded\"\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport SnackBar from \"../Snackbar\"\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport default function SimpleBackdrop(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleToggle = () => {\n    setOpen(!open);\n  };\n\n  return (\n    <div>\n      \n      <Backdrop className={classes.backdrop} open={props.open} onClick={props.handleClose}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <SnackBar/>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport \"./index.css\";\nimport Recorder from \"./Recorderjs/src\";\nimport { app, db, storage } from \"../Firebase\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport Button from \"@material-ui/core/Button\";\nimport { green } from '@material-ui/core/colors';\n\nimport TransitionSnackbar from \"../Snackbar\"\nimport ProgressBar from \"../ProgressBar\"\nimport Slide from \"@material-ui/core/Slide\";\n\nimport { withStyles } from '@material-ui/core/styles';\nfunction SlideTransition(props) {\n  return <Slide {...props} direction=\"up\" />;\n}\n\n\n  \n\n//const audioContext =  new (window.AudioContext || window.webkitAudioContext)();\n\n//const storageClient = Firebase.storage;\n\nclass VoiceMessage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.storeUrl = this.storeUrl.bind(this);\n    // this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n    this.startRecording = this.startRecording.bind(this);\n    this.startOrStopRecording = this.startOrStopRecording.bind(this);\n    //  this.pauseRecording = this.pauseRecording.bind(this);\n    this.createDownloadLink = this.createDownloadLink.bind(this);\n\tthis.handleClose = this.handleClose.bind(this);\n\tthis.handleProgressClose = this.handleProgressClose.bind(this);\n    this.state = {\n      url: \"\",\n      label: \"Voice Message\",\n      isRecording: false,\n\t  openSnackBar: false,\n\t  openProgress:false,\n      progress: 0,\n      Transition: SlideTransition(),\n      //webkitURL is deprecated but nevertheless\n      URL: window.URL || window.webkitURL,\n\n      gumStream: \"\", //stream from getUserMedia()\n      rec: null, //Recorder.js object\n      input: null, //MediaStreamAudioSourceNode we'll be recording\n\n      // shim for AudioContext when it's not avb.\n      AudioContext: window.AudioContext || window.webkitAudioContext,\n      audioContext: null, //audio context to help us record\n    };\n  }\n\n  handleClose = () => {\n    this.setState({\n      ...this.state,\n      openSnackBar: false,\n    });\n  };\n\n  handleProgressClose = () => {\n    this.setState({\n      ...this.state,\n      openProgress: false,\n    });\n  };\n  startOrStopRecording = () => {\n    if (this.state.isRecording) {\n      this.stopRecording();\n    } else this.startRecording();\n  };\n\n  storeUrl = (url) => {\n\t\n    const addUrl = db\n      .collection(\"appointments\")\n      .doc(\"zhuVOpratfGs8xxP1LT0\")\n      .update({\n        urls: app.firestore.FieldValue.arrayUnion({\n          url: url,\n          filename: this.state.filename,\n        }),\n\t  });\n\t  \n\t  this.setState({ openProgress: false });\n\t  this.setState({openSnackBar:true})\n\t//.add({url:url,userId:\"xyz\",fileName:this.state.filename})\n\t\n\n    addUrl\n      .then((docRef) => {\n        console.log(\"Document written with ID: \", docRef.id);\n        this.setState({ url });\n      })\n      .catch(function (error) {\n        console.error(\"Error adding document: \", error);\n      });\n  };\n\n  handleUpload = () => {\n    const { blob, filename } = this.state;\n\n    console.log(\"hello from upload\");\n\n    const uploadTask = storage.ref(\"voice-messages/\" + filename).put(blob);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        // progress function ...\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n\t\tthis.setState({ progress });\n\t\tthis.setState({ openProgress: true });\n      \n      },\n      (error) => {\n        // Error function ...\n        console.log(error);\n      },\n      () => {\n        // complete function ...\n        storage\n          .ref(\"voice-messages/\" + filename)\n\n          .getDownloadURL()\n          .then((url) => {\n\t\t\t\n\t\t\tthis.storeUrl(url);\n\t\t\t\n          })\n          .catch((error) => {\n            console.log(\"caught\" + JSON.stringify(error));\n          });\n      }\n    );\n  };\n\n  startRecording = () => {\n    console.log(\"recordButton clicked\");\n\n    var constraints = { audio: true, video: false };\n\n    navigator.mediaDevices\n      .getUserMedia(constraints)\n      .then((stream) => {\n        console.log(\n          \"getUserMedia() success, stream created, initializing Recorder.js ...\"\n        );\n\n        this.setState({\n          audioContext: new AudioContext(),\n          gumStream: stream,\n          label: \"Stop Recording\",\n          isRecording: !this.state.isRecording,\n        });\n\n        this.setState({\n          input: this.state.audioContext.createMediaStreamSource(stream),\n        });\n        //input = audioContext.createMediaStreamSource(stream);\n\n        console.log(this.state);\n        this.setState({\n          rec: new Recorder(this.state.input, { numChannels: 1 }),\n        });\n        // rec = new Recorder(input, { numChannels: 1 });\n\n        //start the recording process\n        this.state.rec.record();\n\n        console.log(\"Recording started\");\n      })\n      .catch(function (err) {\n        //enable the record button if getUserMedia() fails\n      });\n  };\n\n  stopRecording = () => {\n    console.log(\"stopButton clicked\");\n\n    //disable the stop button, enable the record too allow for new recordings\n\n    //tell the recorder to stop the recording\n\n    if (!this.state.rec) {\n      alert(\"Please allow microphone permission\");\n    } else this.state.rec.stop();\n\n    this.setState({ label: \"Voice Message\" });\n\n    //stop microphone access\n    this.state.gumStream.getAudioTracks()[0].stop();\n\n    //create the wav blob and pass it on to createDownloadLink\n\n\tthis.state.rec.exportWAV(this.createDownloadLink);\n\tthis.setState({isRecording:!this.state.isRecording})\n  };\n\n  createDownloadLink = (blob) => {\n    var url = URL.createObjectURL(blob);\n  \n    var filename = new Date().toISOString();\n\n    this.setState({ blob, filename: filename + \".wav\" });\n\n    this.handleUpload();\n\n    //console.log(link);\n  };\n\n  render() {\n\n\tconst { classes } = this.props;\n    return (\n      <div className=\"voice-message-container\">\n        <Button\n\n        style={{width:\"30%\",height:\"50px\",backgroundColor:\"#4063ff\"}}\n          className=\"voice-message-btn--start\"\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={this.startOrStopRecording}\n          startIcon={<MicIcon />}\n        >\n          \n          {this.state.label}\n        </Button>\n\t\t\n\t\t<ProgressBar open ={this.state.openProgress}  handleClose={this.handleProgressClose}/>\n\t\t<TransitionSnackbar open={this.state.openSnackBar} handleClose={this.handleClose}/>\n      </div>\n    );\n  }\n}\n\n\n\nexport default VoiceMessage;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport QueryBuilderIcon from '@material-ui/icons/QueryBuilder';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display:\"flex\",\n    flexDirection:\"row\",\n    width: '100%',\n\n    backgroundColor: \"theme.palette.background.paper\",\n  },\n  li:{\n    color:\"#dee0e3\",\n    backgroundColor:\"#1e3a87\",\n    display:\"flex\",\n    marginRight:\"30px\",\n    borderRadius:\"30px\"\n  }\n}));\n\nexport default function FolderList() {\n  const classes = useStyles();\n\n  return (\n    <div className=\"date-time-picker\" style={{marginTop:\"40px\"}}>\n\n\n<h2>Appoinment Time</h2>\n    \n    <List className={classes.root}>\n      <ListItem className={classes.li}>\n        <ListItemAvatar>\n          <Avatar>\n          <QueryBuilderIcon/>\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"10:00 AM\"  />\n      </ListItem>\n      <ListItem className={classes.li}>\n        <ListItemAvatar>\n          <Avatar>\n          <QueryBuilderIcon/>\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"11:00 AM\"  />\n      </ListItem>\n      <ListItem className={classes.li}>\n        <ListItemAvatar>\n          <Avatar>\n          <QueryBuilderIcon/>\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText primary=\"12:00 Noon\"  />\n      </ListItem>\n    </List>\n    <List className={classes.root}>\n    <ListItem className={classes.li}>\n      <ListItemAvatar>\n        <Avatar>\n        <QueryBuilderIcon/>\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary=\"1:00 PM\"  />\n    </ListItem>\n    <ListItem className={classes.li}>\n      <ListItemAvatar>\n        <Avatar>\n        <QueryBuilderIcon/>\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary=\"2:00 PM\"  />\n    </ListItem>\n    <ListItem className={classes.li}>\n      <ListItemAvatar>\n        <Avatar>\n        <QueryBuilderIcon/>\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary=\"3:00 PM\" />\n    </ListItem>\n    \n  </List>\n  \n  </div>\n  );\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport \"./index.css\";\n\nconst styles = makeStyles({\n  root: {\n    border: 0,\n\n    /*   boxShadow: \"0 2.8px 2.2px rgba(0, 0, 0, 0.034),0 6.7px 5.3px rgba(0, 0, 0, 0.048),0 12.5px 10px rgba(0, 0, 0, 0.06),0 22.3px 17.9px rgba(0, 0, 0, 0.072),0 41.8px 33.4px rgba(0, 0, 0, 0.086),0 100px 80px rgba(0, 0, 0, 0.12)\",\n     */\n\n    color: \"white\",\n    width: \"100%\",\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: 25,\n    },\n   \n  },\n  multiline:{\n    color: \"black\",\n  },\n \n});\n\nconst stylesX = {\n  root: {\n    border: 0,\n    borderRadius: 3,\n    /*boxShadow: \"0 2.8px 2.2px rgba(0, 0, 0, 0.034),0 6.7px 5.3px rgba(0, 0, 0, 0.048),0 12.5px 10px rgba(0, 0, 0, 0.06),0 22.3px 17.9px rgba(0, 0, 0, 0.072),0 41.8px 33.4px rgba(0, 0, 0, 0.086),0 100px 80px rgba(0, 0, 0, 0.12)\",*/\n    color: \"white\",\n    margin: \"none\",\n  },\n};\n\nexport default function Description() {\n  const classes = styles();\n\n  return (\n    <div className=\"textmessage-container\">\n      <TextField\n      \n        className={\"textmessage--text \" + classes.root}\n        id=\"textmessage\"\n        label=\"Drop a Message\"\n        multiline\n        rows={4}\n        variant=\"outlined\"\n      />\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\n\nimport {db,storage} from '../Firebase'\n\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n    this.storeUrl=this.storeUrl.bind(this);\n    this.state = {\n      image: null,\n      url: \"\",\n      progress: 0\n    };\n  }\n\n  handleChange = e => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0];\n      this.setState(() => ({ image }));\n    }\n  };\n\n  storeUrl =(url)=>{\n\n    const addUrl = db.collection(\"appointments\").add({url:url});\n\n    addUrl.then((docRef)=> {\n        console.log(\"Document written with ID: \", docRef.id);\n        this.setState({ url })}\n    )\n    .catch(function(error) {\n        console.error(\"Error adding document: \", error);\n    });\n\n  }\n\n  handleUpload = (e) => {\n    const { image } = this.state;\n \n    const uploadTask = storage.ref(`${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      snapshot => {\n        // progress function ...\n        const progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        this.setState({ progress });\n      },\n      error => {\n        // Error function ...\n        console.log(error);\n      },\n      () => {\n        // complete function ...\n    storage\n          .ref(image.name)\n        \n          .getDownloadURL()\n          .then(url => {\n            this.storeUrl(url)\n          });\n      }\n    );\n\n    e.preventDefault();\n  };\n  render() {\n    return (\n      <div className=\"center\">\n          <br/>\n          <h2 className=\"green-text\">React Firebase Image Uploader</h2>\n          <br/>\n          <br/>\n        <div className=\"row\">\n          <progress value={this.state.progress} max=\"100\" className=\"progress\" />\n        </div>\n        <br />\n        <br />\n        <br />\n        <div className=\"file-field input-field\">\n          <div className=\"btn\">\n            <span>File</span>\n            <input type=\"file\" onChange={this.handleChange} />\n          </div>\n          <div className=\"file-path-wrapper\">\n            <input className=\"file-path validate\" type=\"text\" />\n          </div>\n        </div>\n        <button\n          onClick={this.handleUpload}\n          className=\"waves-effect waves-light btn\"\n        >\n          Upload\n        </button>\n        <br />\n        <br />\n        <img\n          src={this.state.url || \"https://via.placeholder.com/400x300\"}\n          alt=\"Uploaded Images\"\n          height=\"300\"\n          width=\"400\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default ImageUpload;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MicIcon from '@material-ui/icons/Mic';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport Button from \"@material-ui/core/Button\"\nimport './index.css'\nimport { useStyles } from \"@material-ui/pickers/views/Calendar/SlideTransition\";\n\nconst styles = makeStyles({\n    root: {\n      border: 0,\n  \n      /*   boxShadow: \"0 2.8px 2.2px rgba(0, 0, 0, 0.034),0 6.7px 5.3px rgba(0, 0, 0, 0.048),0 12.5px 10px rgba(0, 0, 0, 0.06),0 22.3px 17.9px rgba(0, 0, 0, 0.072),0 41.8px 33.4px rgba(0, 0, 0, 0.086),0 100px 80px rgba(0, 0, 0, 0.12)\",\n       */\n  \n      color: \"white\",\n      backgroundColor:\"#0e3063\",\n      width: \"30%\",\n      height:\"50px\",\n    },\n    multiline:{\n      color: \"black\",\n    },\n    \".MuiFormLabel-root\": {\n      borderRadius: \"50px\",\n    },\n    \"& .MuiOutlinedInput-root\": {\n      borderRadius: \"50px\",\n    },\n  });\n  \nexport default function SubmitButton() {\n    const classes = styles();\n  return (\n    <div className=\"submit-button-container\">\n\n       \n        <Button\n        className={\"submit-btn \"+classes.root}\n        variant=\"contained\"\n       \n        color=\"primary\"\n      \n       \n      >\n       Get an Appointment\n      </Button>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport Description from \"./components/Description\";\nimport Name from \"./components/Name\";\nimport AppHeader from \"./components/Header\";\nimport VoiceMessage from \"./components/VoiceMessage\";\nimport DateTime from \"./components/Date-Time\";\nimport TextMessage from \"./components/TextMessage\";\nimport ImageUpload from \"./components/VoiceUploader/index\";\nimport {\n  SubmitButton,\n  \n} from './components/Buttons';\nimport {app,FirebaseContext} from \"./components/Firebase\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport { blue, pink } from \"@material-ui/core/colors\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst style = {\n  root: {\n    color: \"red\", // 🔴\n    padding: \"30px\",\n    \"& > *\": {\n      margin: \"16px\",\n      width: \"25ch\",\n    },\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    color: \"red\", // 🔴\n\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n}));\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: pink,\n    // Used by `getContrastText()` to maximize the contrast between\n    // the background and the text.\n    contrastThreshold: 3,\n    // Used by the functions below to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.2,\n  },\n});\n\nReactDOM.render(\n  <FirebaseContext.Provider value={app}>\n    <ThemeProvider theme={theme}>\n      <App>\n        <Paper elevation={5} style={{padding:\"30px\",border:\"5px #2f659c solid\",backgroundColor:\"#f0f1f2\"}}>\n          <AppHeader />\n\n          <Name />\n          <Description />\n          <DateTime/>\n          <VoiceMessage />\n          <TextMessage />\n          <SubmitButton/>\n         \n        </Paper>\n      </App>\n    </ThemeProvider>\n  </FirebaseContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = require(\"./recorder\").Recorder;","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}